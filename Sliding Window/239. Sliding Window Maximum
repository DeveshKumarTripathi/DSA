class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Deque<Integer> dq = new LinkedList<>();
        ArrayList<Integer> list = new ArrayList<>();

        for(int i = 0; i < k; i++){
            while(dq.size() > 0 && nums[dq.peekLast()] <= nums[i]){
                dq.pollLast();
            }
            dq.addLast(i);
        }

        for(int i = k; i <nums.length; i++){
            list.add(nums[dq.peekFirst()]);

            while(dq.size() > 0 && dq.peekFirst() <= i-k){
                dq.pollFirst();
            }
            while(dq.size() > 0 && nums[dq.peekLast()] <= nums[i]){
                dq.pollLast();
            }
            dq.addLast(i);
        }
        list.add(nums[dq.peekFirst()]);

        int[] arr = new int[list.size()];
        for(int i = 0; i < arr.length; i++){
            arr[i] = list.get(i);
        }
        return arr;
    }
}
