/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(-1);
        ListNode tail = head;
        int carry = 0;

        if(l1.val == 0 && l1.next == null && l2.val == 0 && l2.next == null) return new ListNode(0);
        
        while(l1 != null || l2 != null || carry > 0){
            int val1 = 0;
            if(l1 != null){
                val1 = l1.val;
                l1 = l1.next;
            }
            int val2 = 0;
            if(l2 != null){
                val2 = l2.val;
                l2 = l2.next;
            }
            
            int sum = val1 + val2 + carry;
            tail.next = new ListNode(sum % 10);
            carry = sum / 10;
            tail = tail.next;
        }
        
        return head.next;
    }
}
