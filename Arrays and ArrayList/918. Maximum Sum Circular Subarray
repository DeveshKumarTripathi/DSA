class Solution {
    public int maxSubarraySumCircular(int[] arr) {
        int n = arr.length;
        int maxStraightSum = Integer.MIN_VALUE;
        int minStraightSum = Integer.MAX_VALUE;
        int arraySum = 0;
        
        int tempMaxSum = 0;
        int tempMinSum = 0;
        
        for(int i = 0; i < n; i++){
            arraySum += arr[i];
            
            tempMaxSum += arr[i];
            maxStraightSum = Math.max(maxStraightSum,tempMaxSum);
            if(tempMaxSum < 0) tempMaxSum = 0;
            tempMinSum += arr[i];
            minStraightSum = Math.min(minStraightSum,tempMinSum);
            if(tempMinSum > 0) tempMinSum = 0;
        }
        if(arraySum == minStraightSum){
            return maxStraightSum;
        }
        return Math.max(maxStraightSum,(arraySum - minStraightSum));
    }
}
